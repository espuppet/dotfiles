call plug#begin('~/.vim/bundle')
"Plug 'gmarik/Vundle.vim'

Plug 'scrooloose/nerdtree', {'on' : 'NERDTreeToggle'}
Plug 'jistr/vim-nerdtree-tabs', {'on' : 'NERDTreeToggle'}
Plug 'Xuyuanp/git-nerdtree', {'on' : 'NERDTreeToggle'}
Plug 'kien/ctrlp.vim'
"Plug 'vim-syntastic/syntastic'
Plug 'w0rp/ale'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'fholgado/minibufexpl.vim'
"Plug 'ervandew/supertab'
Plug 'majutsushi/tagbar'
"Plug 'davidhalter/jedi-vim'
Plug 'Lokaltog/vim-easymotion'
"Plug 'Valloric/YouCompleteMe'
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
Plug 'LucHermitte/lh-vim-lib'
Plug 'LucHermitte/local_vimrc'
Plug 'tpope/vim-surround'
Plug 'jiangmiao/auto-pairs'
Plug 'plytophogy/vim-virtualenv'
"Plug 'sjl/gundo.vim'
"Plug 'spiiph/vim-space'
"Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline'
Plug 'chriskempson/vim-tomorrow-theme'
"Plug 'nathanaelkane/vim-indent-guides'
Plug 'Yggdroot/indentLine'
"Plug 'hynek/vim-python-pep8-indent'
"Plug 'neilagabriel/vim-geeknote'
Plug 'xolox/vim-easytags'
Plug 'xolox/vim-misc'
Plug 'mileszs/ack.vim'
"Plug 'klen/python-mode'
Plug 'Tuxdude/mark.vim'
"Plug 'vimwiki'
"Plug 'VimIM'
"Plug 'a.vim'
"Plug 'AutoComplPop'
"Plug 'matchit.zip'
call plug#end()

colorscheme Tomorrow-Night

let g:solarized_termcolors=256

nmap <leader>f :NERDTreeToggle<CR>
let g:NERDTreeChDirMode=2
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

nmap <leader>b :CtrlPBuffer<CR>
let g:ctrlp_extensions = ['tag']

let g:SuperTabDefaultCompletionType = "context"
"let g:SuperTabDefaultCompletionType = "<C-X><C-O>"
"
nmap <leader>l :Tagbar<CR>

"let g:pymode_python = 'python3'
"
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completion= 1

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0
"
"let g:syntastic_python_checkers = ['pylint']

" Use deoplete.
let g:deoplete#enable_at_startup = 1

let g:ale_linters = {'c': ['gcc']}
let g:ale_open_list = 1
let g:ale_list_window_size = 3
